apiVersion: v1
kind: Service
metadata:
  name: locations-service
  namespace: kafka
spec:
  selector:
    app: locations-depl
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locations-depl
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: locations-depl
  template:
    metadata:
      labels:
        app: locations-depl
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:latest
          command: ['sh', '-c', 'until nc -z locations-db-rw 5432; do echo "Waiting for PostgreSQL..."; sleep 2; done;']
        - name: wait-for-kafka
          image: busybox:latest
          command: ['sh', '-c', 'until nc -z my-cluster-kafka-bootstrap 9092; do echo "waiting for kafka..."; sleep 2; done;']
      containers:
      - name: locations-depl
        image: fooddelivery-locations-service:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 35
        readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 35
        
        env:
          - name: Kafka__BootstrapServers
            value: "my-cluster-kafka-bootstrap:9092"
          - name: Seq
            value: "http://seq-service:5341"
          - name: "ASPNETCORE_ENVIRONMENT"
            value: "Development"
          - name: "ConnectionStrings__DefaultConnection"
            valueFrom:
              secretKeyRef:
                name: "backend-locations-secret"
                key: "ConnectionStrings__DefaultConnection"

          - name: "ASPNETCORE_URLS"
            value: "http://+:8080"
          - name: "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT"
            value: "false"

        ports:
        - containerPort: 8080
