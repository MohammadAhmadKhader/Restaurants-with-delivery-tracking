<Project>
    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <Watch />
    </PropertyGroup>

    <!-- * Common packages -->
    <ItemGroup Condition= " !$(MSBuildProjectName.Contains('Contracts')) and '$(IsTestProject)' != 'true' ">
        <PackageReference Include="DotNetEnv" />
        <PackageReference Include="FluentValidation" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools"  />
        <PackageReference Include="Serilog.AspNetCore" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" />
        <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis"  />
        <PackageReference Include="ZiggyCreatures.FusionCache" />
        <PackageReference Include="ZiggyCreatures.FusionCache.Serialization.SystemTextJson"  />
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" />
        <PackageReference Include="AspNetCore.HealthChecks.Redis" />
        <PackageReference Include="AspNetCore.HealthChecks.NpgSql" />
        <PackageReference Include="AspNetCore.HealthChecks.UI.Client"  />
        <PackageReference Include="AspNetCore.HealthChecks.Kafka" />
        <PackageReference Include="Serilog.Sinks.Seq" />
        <PackageReference Include="Serilog.Sinks.OpenTelemetry" />
        <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
        <PackageReference Include="CloudinaryDotNet" />
    </ItemGroup>

    <!-- * Testing Projects -->
    <ItemGroup Condition=" '$(IsTestProject)' == 'true' ">
        <Using Include="Xunit" />
        <Using Include="Xunit.Abstractions" />
        <Using Include="System.Net" />
        <Using Include="System.Net.Http.Json" />
        <Using Include="Shared.Utils" />
        <Using Include="Shared.Common" />

        <PackageReference Include="coverlet.collector"  />
        <PackageReference Include="Microsoft.NET.Test.Sdk" />
        <PackageReference Include="xunit" />
        <PackageReference Include="xunit.runner.visualstudio" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing"/>
        <PackageReference Include="Meziantou.Extensions.Logging.Xunit" />
    </ItemGroup>

    <!-- * Contracts projects -->
    <ItemGroup>
        <PackageReference Condition="$(MSBuildProjectName.Contains('Contracts'))" Include="Refit.HttpClientFactory" />
    </ItemGroup>

    <!-- * Others -->
    <ItemGroup>
        <!-- Include Shared for all normal projects and test projects (not explicitly required) (not contracts and not Shared itself) -->
        <ProjectReference Include="..\..\services\Shared\Shared.csproj" 
        Condition="!$(MSBuildProjectName.Contains('Contracts')) and '$(MSBuildProjectName)' != 'Shared'" />

        <!-- Include Shared.Contracts for all contracts projects and forbid self referencing for Shared.Contracts -->
        <ProjectReference Include="..\..\contracts\Shared.Contracts\Shared.Contracts.csproj" 
        Condition="$(MSBuildProjectName.Contains('Contracts')) and '$(MSBuildProjectName)' != 'Shared.Contracts' " />

        <!-- If contract project exists its referenced by default by the project name -->
        <ProjectReference Include="..\..\contracts\$(MSBuildProjectName).Contracts\$(MSBuildProjectName).Contracts.csproj"
        Condition="
        Exists('..\..\contracts\$(MSBuildProjectName).Contracts\$(MSBuildProjectName).Contracts.csproj') 
        and 
        !$(MSBuildProjectName.Contains('Contracts'))" />
    </ItemGroup>

    <ItemGroup>
        <Watch Include="**/*.cs" Exclude="bin\**\*;obj\**\*"  />
        <Watch Include="appsettings*.json" />
    </ItemGroup>
</Project>